#include<bits/stdc++.h>
using namespace std;
struct node {
	struct node *link;
	int val;
};
struct node * make(struct node*start,int a)
{
	struct node *tmp,*p;
	tmp=(struct node*)malloc(sizeof(struct node));
	tmp->val=a;
	if(start==NULL)
	{
		tmp->link=NULL;
		start=tmp;
		return start;		
		
	}
	p=start;
	while(p->link!=NULL)
	{
		p=p->link;
		
	}
	p->link=tmp;
	tmp->link=NULL;
	return start;
}
int loop(struct node* start)
{
	unordered_set<struct node*>s;
	struct node *p;
	p=start;

	while(p!=NULL)
	{
			if(s.find(p)==s.end())
		s.insert(p);
		else return 1;
		p=p->link;
		
	}
	return 0;
}
int main()
{
	struct node *start=NULL,*ptr;
	int n,a;
	cin>>n;
	while(n--)
	{
		cin>>a;
		start=make(start,a);
	}
	ptr=start;

	start->link->link=start;
	cout<<loop(start);
}
